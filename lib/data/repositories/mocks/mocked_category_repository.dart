import 'package:flutter_finances/domain/entities/category.dart';
import 'package:flutter_finances/domain/exceptions/RepositoryException.dart';
import 'package:flutter_finances/domain/repositories/category_repository.dart';

class MockedCategoryRepository implements CategoryRepository {
  final List<Category> _mockCategories = [
    Category(id: 1, name: '–ó–∞—Ä–ø–ª–∞—Ç–∞', isIncome: true, emoji: 'üí∞'),
    Category(id: 2, name: '–ü–æ–¥–∞—Ä–æ–∫', isIncome: true, emoji: 'üéÅ'),
    Category(id: 3, name: '–ï–¥–∞', isIncome: false, emoji: 'üçΩÔ∏è'),
    Category(id: 4, name: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', isIncome: false, emoji: 'üéâ'),
  ];

  @override
  Future<List<Category>> getAllCategories() async {
    try {
      return _mockCategories;
    } catch (e) {
      throw RepositoryException('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
    }
  }

  @override
  Future<List<Category>> getCategoriesByIsIncome(bool isIncome) async {
    final filtered =
        _mockCategories.where((c) => c.isIncome == isIncome).toList();
    return filtered;
  }
}
